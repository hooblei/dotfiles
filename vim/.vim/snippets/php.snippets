snippet =
	<?=${1};?>${2}
snippet ec
	echo "${1:string}\"${2};
snippet pr
	print_r(${1:var});{$2}
snippet vd
	var_dump(${1});${2}
snippet ve
	var_export(${1});${2}
snippet inc
	include_once '${1:file}';${2}
snippet inc1
	include '${1:file}';${2}
snippet req
	require_once '${1:file}';${2}
snippet req2
	require '${1:file}';${2}
# $GLOBALS['...']
snippet globals
	$GLOBALS['${1:variable}']${2: = }${3:something}${4:;}${5}
snippet $_ COOKIE['...']
	$_COOKIE['${1:variable}']${2}
snippet $_ ENV['...']
	$_ENV['${1:variable}']${2}
snippet $_ FILES['...']
	$_FILES['${1:variable}']${2}
snippet $_ Get['...']
	$_GET['${1:variable}']${2}
snippet $_ POST['...']
	$_POST['${1:variable}']${2}
snippet $_ REQUEST['...']
	$_REQUEST['${1:variable}']${2}
snippet $_ SERVER['...']
	$_SERVER['${1:variable}']${2}
snippet $_ SESSION['...']
	$_SESSION['${1:variable}']${2}
# Start Docblock
snippet /*
	/**
	 * ${1}
	 */
# Function
snippet fun
	/**
	 *
	 * @return ${4:void}
	 */
	function ${1:name}(${2})
	{
		${6}
	}
# Class ...
snippet cl
	/**
	 * ${1}
	 */
	class ${2:ClassName}
	{
		${3}
		function ${4:__construct}(${5:argument})
		{
			${6:// code...}
		}
	}
# Class Variable
snippet cv
	/**
	 * @var ${4:string}
	 */
	${1:public} $${2};${5}
# Class Method
snippet cf
	/**
	 * ${4}
	 *
	 * @return ${5:void}
	 */
	${1:public }function ${2:name}(${3})
	{
		${6}
	}
# define(...)
snippet def
	define('${1}'${2});${3}
# defined(...)
snippet def?
	${1}defined('${2}')${3}
snippet wh
	while (${1:/* condition */}) {
		${2:// code...}
	}
# do ... while
snippet do
	do {
		${2:// code... }
	} while (${1:/* condition */});
snippet for
	for ($${2:i} = 0; $$2 < ${1:count}; $$2${3: += 1}) {
		${4: // code...}
	}
snippet fore
	foreach ($${1:var} as $${2:val}) {
		${3}
	}
snippet if
	if (${1:/* condition */}) {
		${2:// code...}
	}
snippet ife
	if (${1:/* condition */}) {
		${2:// code...}
	} else {
		${3:// code...}
	}
	${4}
snippet else
	else {
		${1:// code...}
	}
snippet elseif
	elseif (${1:/* condition */}) {
		${2:// code...}
	}
# Tertiary conditional
snippet ?
	$${1:retVal} = (${2:condition}) ? ${3:a} : ${4:b};${5}
snippet switch
	switch ($${1:variable}) {
		case '${2:value}':
			${3:// code...}
			break;
		${5}
		default:
			${4:// code...}
			break;
	}
snippet case
	case '${1:value}':
		${2:// code...}
		break;${3}
# mapping
snippet map
	array(
		'${1}' => ${2},${3}
	);
